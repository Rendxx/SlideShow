{"version":3,"sources":["SlideShow.js"],"names":[],"mappingsfile":"SlideShow.js","sourcesContent":["/************************************************ \r\nSilde Show\r\nCopyright (c) 2014-2015 Dongxu Ren  http://www.rendxx.com/\r\n\r\nLicense: MIT (http://www.opensource.org/licenses/mit-license.php)\r\nVersion: 2.0\r\nUpdate: 2015-09-14\r\n\r\nDescription:\r\n    Enable user to show the HTML as a brief photo album.\r\n    The album enable Next/Previous/Skip function if user provide the HTML elements.\r\n    \r\n    This library will not change the HTML structure, you need to provide all the elements - it will only bind the function on the elements.\r\n    The elements you need to provide:\r\n        1. List of HTML-frame element. An HTML-frame is a Dom element which you want it to be treated as a photo in album.\r\n        2. Next / Prev button. The dom element is what you only need to provide, same as below.\r\n        3. List of Skip button. First element will be linked with the first HTML-frame, and so on.\r\n        4. Container. The element containes all your HTML-frames. \r\n\r\n    And be care of the \"position\" css of your HTML-frames. Its value will be changed to \"absolute\".\r\n    PS: you need to use this library after HTML structure is ready.\r\n    \r\nCompatibility:\r\n    Chrome; Fire Fox; Safari; Edge; IE 9-11; IE 7,8;\r\n \r\nDependency:\r\n    jQuery\r\n\r\nAPI:\r\n    $$.slideShow(opts)\r\n        - opts: \r\n            container:          container dom-elements of the frame (required)\r\n            frame:              HTML-frame dom-elements in an array  (required)\r\n            controller:         controller dom-elements in an array\r\n            next:               dom element of next-botton\r\n            prev:               dom element of previous-botton\r\n            activeClass:        css class name of active\r\n            autoSwap:           millisecond of swapping frames, 0 mean no auto swapping\r\n\r\n************************************************/\r\n\r\n$(function () {\r\n    \"use strict\";\r\n    var SlideShow = function (opts_in) {\r\n        var that = this;\r\n        var pictureItems = [];                  // array of picture-item object\r\n        var html = {\r\n            container: null,\r\n            controller: [],\r\n            next: null,\r\n            prev: null\r\n        };\r\n        var activeClass = \"\";           // css class of actived   \r\n        var currentIdx = -1;            // current index\r\n        var autoSwap = 0;               // auto swap time, 0 mean no\r\n        var timeoutFunc = null;         // timeout function\r\n\r\n        // goto next picture\r\n        this.next = function () {\r\n            if (pictureItems.length == 0) return;\r\n            var idx = (currentIdx + 1) % pictureItems.length;\r\n            this.goto(idx);\r\n        };\r\n\r\n        // goto previous picture\r\n        this.prev = function () {\r\n            if (pictureItems.length == 0) return;\r\n            var idx = (currentIdx - 1 + pictureItems.length) % pictureItems.length;\r\n            this.goto(idx);\r\n        };\r\n\r\n        // goto a special picture\r\n        this.goto = function (idx) {\r\n            if (timeoutFunc != null) {\r\n                clearTimeout(timeoutFunc);\r\n                timeoutFunc = null;\r\n            }\r\n            if (currentIdx == idx) {\r\n                if (autoSwap != 0) { timeoutFunc = setTimeout(function () { that.next(); }, autoSwap); }\r\n                return;\r\n            }\r\n\r\n            if (pictureItems.length == 0 || idx < 0 || idx >= pictureItems.length) return;\r\n            html.controller[idx].addClass(activeClass);\r\n            pictureItems[idx].show();\r\n            if (currentIdx >= 0 && currentIdx < pictureItems.length) {\r\n                html.controller[currentIdx].removeClass(activeClass);\r\n                pictureItems[currentIdx].hide();\r\n            }\r\n            currentIdx = idx;\r\n\r\n            if (autoSwap != 0) { timeoutFunc = setTimeout(function () { that.next(); }, autoSwap); }\r\n        };\r\n\r\n        // setup function\r\n        var _itemSetup = function (pictureEles) {\r\n            pictureItems = [];\r\n            for (var i = 0; i < pictureEles.length; i++) {\r\n                var newItem = new pictureItem({ ele: $(pictureEles[i]) });\r\n                pictureItems.push(newItem);\r\n            }\r\n        };\r\n\r\n        var _controllerSetup = function (controller, nextEle, preEle) {\r\n            if (controller != null) \r\n                for (var i = 0; i < controller.length; i++) {\r\n                    html.controller[i] = $(controller[i]);\r\n                    html.controller[i].click({ idx: i }, function (e) {\r\n                        that.goto(e.data.idx);\r\n                    });\r\n                }            \r\n            if (nextEle != null) {\r\n                html.next = $(nextEle);\r\n                html.next.click(function () {\r\n                    that.next();\r\n                });\r\n            } if (preEle != null) {\r\n                html.prev = $(preEle);\r\n                html.prev.click(function () {\r\n                    that.prev();\r\n                });\r\n            }\r\n        };\r\n\r\n        var _containerSetup = function (container) {\r\n            // add \"position = relative\" to the container element\r\n            html.container = $(container);\r\n            if (html.container.css(\"position\") == null || (html.container.css(\"position\").toLowerCase() != \"absolute\" && html.container.css(\"position\").toLowerCase() != \"fixed\"))\r\n                html.container.css(\"position\",\"relative\");\r\n        };\r\n\r\n        var _init = function (opts) {\r\n            _containerSetup(opts.container);\r\n            _itemSetup(opts.frame);\r\n            _controllerSetup(opts.controller, opts.next, opts.prev);\r\n            if (opts.activeClass != null) activeClass = opts.activeClass;\r\n            if (opts.autoSwap != null) autoSwap = opts.autoSwap;\r\n\r\n            that.goto(0);\r\n        }(opts_in);\r\n    };\r\n\r\n    // picture function class\r\n    var pictureItem = function (opts_in) {\r\n        var that = this;\r\n        this.ele = null;            // picture element\r\n        this.actived = false;       // whether this picture is actived\r\n\r\n        this.show = function (functionName) {\r\n            functionName = functionName || \"defaultFunc\";\r\n            showFunction[functionName](that.ele);\r\n            this.actived = true;\r\n        };\r\n\r\n        this.hide = function (functionName) {\r\n            functionName = functionName || \"defaultFunc\";\r\n            hideFunction[functionName](that.ele);\r\n            this.actived = false;\r\n        };\r\n\r\n        var _funcSetup = function () {\r\n        };\r\n\r\n        // scan the whole dom-tree to find image to preload them\r\n        // <image> & background-image on all elements will be found\r\n        var _preload = function () {\r\n            var buiudImg = function (src) {\r\n                if (src == \"\") return;\r\n                var img = new Image();\r\n                img.onload = function () {\r\n                    img = null;\r\n                };\r\n                img.src = src;\r\n            };\r\n\r\n            try {\r\n                // scan all <image>\r\n                var images = that.ele.find(\"image\");\r\n                for (var i = 0; i < images.length; i++) {\r\n                    buiudImg(images[i].src);\r\n                }\r\n\r\n                // scan all the background-images\r\n                var dfs = function (ele) {\r\n                    var $ele = $(ele);\r\n                    var bg = $ele.css(\"background-image\")\r\n                    if (bg != \"\" && bg != \"none\") {\r\n                        buiudImg(bg.split('(')[1].split(')')[0]);\r\n                    }\r\n                    var ch = $ele.children();\r\n                    for (var i = 0; i < ch.length; i++) dfs(ch[i]);\r\n                };\r\n                dfs(that.ele[0]);\r\n            } catch (e) {\r\n            }\r\n        };\r\n\r\n        var _init = function (opts) {\r\n            that.ele = opts.ele;\r\n            that.ele.css({\r\n                position: \"absolute\",\r\n                top:\"0px\",\r\n                left:\"0px\"\r\n            });\r\n            that.ele.hide();\r\n            _funcSetup();\r\n            _preload();\r\n        }(opts_in);\r\n    };\r\n    \r\n    // Show / Hide animation function\r\n    var showFunction = {\r\n        \"defaultFunc\": function (ele) {\r\n            ele.css(\"z-index\", 1);\r\n            ele.stop(true, true).fadeIn(1, function () {\r\n                ele.css(\"z-index\", 2);\r\n            });\r\n        }\r\n    };\r\n\r\n    var hideFunction = {\r\n        \"defaultFunc\": function (ele) {\r\n            ele.css(\"z-index\", 3);\r\n            ele.stop(true, true).fadeOut(1000);\r\n        }\r\n    };\r\n    \r\n    // register function to window\r\n    var _register = function () {\r\n        window.$$ = window.$$ || {};\r\n        window.$$.slideShow = function (opts_in) { new SlideShow(opts_in); };\r\n    }();\r\n});"],"sourceRoot":"/source/"}